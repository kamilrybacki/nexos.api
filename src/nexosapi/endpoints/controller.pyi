import dataclasses
import httpx
import typing
from nexosapi.domain.base import NullableBaseModel as NullableBaseModel
from nexosapi.domain.requests import NexosAPIRequest as NexosAPIRequest
from nexosapi.domain.responses import NexosAPIResponse as NexosAPIResponse
from nexosapi.services.http import NexosAPIService as NexosAPIService
from typing import Any, ClassVar, TypeVar

EndpointRequestType = TypeVar("EndpointRequestType", bound=NexosAPIRequest)
EndpointResponseType = TypeVar("EndpointResponseType", bound=NexosAPIResponse)

@dataclasses.dataclass
class NexosAIEndpointController(typing.Generic[EndpointRequestType, EndpointResponseType]):
    VALID_ENDPOINT_REGEX: ClassVar[str] = ...
    endpoint: ClassVar[str | None] = ...
    class Operations: ...
    operations: Operations
    @dataclasses.dataclass
    class _RequestManager:
        def prepare(self, data: dict[str, Any]) -> NexosAIEndpointController._RequestManager: ...
        async def send(
            self, endpoint: str, api_service: NexosAPIService = ...
        ) -> EndpointRequestType | NullableBaseModel: ...
        def __getattr__(self, target: str) -> Any: ...

    REQUEST_MANAGER_CLASS: type
    request: REQUEST_MANAGER_CLASS
    @classmethod
    def __init_subclass__(cls, **kwargs: Any) -> None: ...
    def __post_init__(self) -> None: ...
    def on_response(self, response: EndpointRequestType) -> EndpointResponseType: ...
    def on_error(self, response: httpx.Response) -> EndpointResponseType: ...
    def __init__(self) -> None: ...
    def __replace__(self) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
    def __replace__(self, *, operations, REQUEST_MANAGER_CLASS, request) -> None: ...
